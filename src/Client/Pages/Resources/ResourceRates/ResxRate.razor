@page "/resourcerate/{resxid:int}"
@using AzureApp.Shared
@inject HttpClient Http

<PageTitle>Resources Rates</PageTitle>

@if (resource is not null)
{
    <h1>@resource.Name > Rates</h1>
    <p>The resource rates for @resource.Name</p>
    <p>@resource.Description</p>
}
else
{
    <h1>Resources > Rates</h1>
    <p>The list of available resource rates</p>
}
<p>All rates are taken into account! Application does not filter based on date or other property!</p>
<p>
    <a href="/resource" class="btn btn-secondary" role="button">
        <span class="oi oi-arrow-left" aria-hidden="true"></span> Return
    </a>
    <a href="/resourcerate/@ResxId/add" class="btn btn-primary" role="button">
        <span class="oi oi-plus" aria-hidden="true"></span> Create
    </a>
</p>

@if (model is not null)
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Product</th>
                <th>Sku</th>
                <th>Meter</th>
                <th>Retail Price</th>
                <th>Minimum Units</th>
                <th>Unit Of Measure</th>
                <th>Current Units</th>
                <th>Type</th>
                <th>Service</th>
                <th>Category</th>
                <th>Location</th>
                <th>Currency</th>
                <th>Valid From</th>
                <th>Primary?</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in model)
            {
                <tr>
                    <td>@item.Name</td>
                    <td>@item.Product</td>
                    <td>@item.Sku</td>
                    <td>@item.MeterName</td>
                    <td>@item.RetailPrice</td>
                    <td>@item.MiminumUnits</td>
                    <td>@item.UnitOfMeasure</td>
                    <td>@string.Join(", ", @item.ResourceUnits!.Select(s => s.SetupMeasureUnit.Name))</td>
                    <td>@item.Type</td>
                    <td>@item.Service</td>
                    <td>@item.Category</td>
                    <td>@item.Location</td>
                    <td>@item.CurrencyCode</td>
                    <td>@item.ValidFrom.ToString("yyyy-MM-dd")</td>
                    <td>@item.IsPrimaryRegion</td>
                    <td>
                        <a href="/resourceunit/@ResxId/@item.Id" class="btn btn-outline-primary" role="button">
                            <span class="oi oi-list" aria-hidden="true"></span> Units
                        </a>
                        <a href="/resourcerate/@ResxId/edit/@item.Id" class="btn btn-outline-dark" role="button">Edit</a>
                        <a href="/resourcerate/@ResxId/delete/@item.Id" class="btn btn-outline-dark" role="button">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p><em>Loading...</em></p>
}

@code {
    private AzureApp.Shared.Resource? resource;
    private AzureApp.Shared.ResourceRate[]? model;

    [Parameter]
    public int ResxId { get; set; } //resource id

    protected override async Task OnInitializedAsync()
    {
        resource = await Http.GetFromJsonAsync<AzureApp.Shared.Resource>($"{nameof(AzureApp.Shared.ResourceRate)}/parent/{ResxId}");
        model = await Http.GetFromJsonAsync<AzureApp.Shared.ResourceRate[]>($"{nameof(AzureApp.Shared.ResourceRate)}/list/{ResxId}");
    }
}
