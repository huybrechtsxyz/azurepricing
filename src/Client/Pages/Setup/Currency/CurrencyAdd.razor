@page "/currency/add"
@using AzureApp.Shared
@inject NavigationManager NavigationManager
@inject HttpClient Http

<PageTitle>Currencies</PageTitle>

<h1>Currency</h1>

<p>Create a new currency.</p>
<p>
    <a href="/currency" class="btn btn-primary" role="button"><i class="oi oi-arrow-left"></i>Cancel</a>
</p>

<EditForm EditContext="@editContext" OnValidSubmit="SaveItem">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="mb-3">
        <label for="Code" class="form-label">Code</label>
        <div class="col-md-4"><InputText @bind-Value="Model.Code" class="form-control" /></div>
        <ValidationMessage For="@(() => Model.Code)" />
    </div>
    <div>
        <button type="submit" class="btn btn-primary">Save</button>
        <button class="btn btn-light" @onclick="CancelItem">Cancel</button>
    </div>
</EditForm>


@code {
    private EditContext? editContext;
    private ValidationMessageStore? messageStore;

    public SetupCurrency? Model { get; set; }

    protected override Task OnInitializedAsync()
    {
        Model = new();
        editContext = new(Model);
        editContext.OnValidationRequested += HandleValidationRequested;
        messageStore = new(editContext);
        return base.OnInitializedAsync();
    }

    private void HandleValidationRequested(object? sender, ValidationRequestedEventArgs args)
    {

    }

    private async Task SaveItem()
    {
        if (Model is null)
            return;

        await Http.PostAsJsonAsync<SetupCurrency>("SetupCurrency", Model);
        NavigationManager.NavigateTo("/currency");

        //var response = await Http.PostAsJsonAsync<SetupCurrency>("SetupCurrency", Model);
        //if (response.IsSuccessStatusCode)
        //{
        //    NavigationManager.NavigateTo("/currency");
        //    return;
        //}

        //var errors = await response.Content.ReadFromJsonAsync<Dictionary<string, List<string>>>() ?? new();
        //if (errors.Any())
        //{ 
        //}
    }

    private void CancelItem()
    {
        NavigationManager.NavigateTo("/currency");
    }
}
